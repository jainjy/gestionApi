import { PrismaClient } from '@prisma/client'
const prisma = new PrismaClient()

async function main() {
  console.log('üå± Seeding database...')

  // =======================
  // CATEGORIES (Prestations)
  // =======================
  const categoriesNames = [
    'Prestations int√©rieures',
    'Prestations ext√©rieures',
    'Constructions'
  ]

  const categoriesMap = {}
  for (const name of categoriesNames) {
    let cat = await prisma.category.findFirst({ where: { name } })
    if (!cat) {
      cat = await prisma.category.create({ data: { name } })
      console.log(`‚ûï cat√©gorie cr√©√©e : ${name}`)
    } else {
      console.log(`üîÅ cat√©gorie existe d√©j√† : ${name}`)
    }
    categoriesMap[name] = cat
  }

  // =======================
  // M√âTIERS
  // =======================
  const metiersData = [
    { libelle: 'Plombier' },
    { libelle: '√âlectricien' },
    { libelle: 'Carreleur' },
    { libelle: 'Ma√ßon' },
    { libelle: 'Constructeur' },
    { libelle: 'Avocat' },
    { libelle: 'G√©om√®tre' },
    { libelle: 'Bureau d\'√©tude' },
    { libelle: 'Menuisier' },
    { libelle: 'Peintre' },
    { libelle: 'Couvreur' },
    { libelle: 'Architecte' },
    { libelle: 'D√©corateur d\'int√©rieur' },
    { libelle: 'Paysagiste' },
    { libelle: 'Serrurier' },
    { libelle: 'Technicien climatisation' },
    { libelle: 'Pl√¢trier' },
    { libelle: 'Ing√©nieur civil' },
    { libelle: 'Charpentier' },
  ]

  const metiersMap = {}
  for (const metier of metiersData) {
    let existing = await prisma.metier.findFirst({ where: { libelle: metier.libelle } })
    if (!existing) {
      existing = await prisma.metier.create({ data: metier })
      console.log(`‚ûï m√©tier cr√©√© : ${metier.libelle}`)
    } else {
      console.log(`üîÅ m√©tier existe d√©j√† : ${metier.libelle}`)
    }
    metiersMap[metier.libelle] = existing
  }

  // =======================
  // SERVICES
  // =======================
  // Services √©tendus avec descriptions
  const servicesData = [
    {
      libelle: 'Installation √©lectrique compl√®te',
      description: 'Installation compl√®te du r√©seau √©lectrique pour maison neuve ou r√©novation'
    },
    {
      libelle: 'R√©paration de panne √©lectrique',
      description: 'Diagnostic et r√©paration de pannes √©lectriques diverses'
    },
    {
      libelle: 'Mise aux normes √©lectriques',
      description: 'Mise en conformit√© de l\'installation √©lectrique selon les normes en vigueur'
    },
    {
      libelle: 'Installation plomberie',
      description: 'Installation compl√®te du r√©seau de plomberie'
    },
    {
      libelle: 'R√©paration de fuite d\'eau',
      description: 'Recherche et r√©paration de fuites d\'eau'
    },
    {
      libelle: 'Pose de carrelage',
      description: 'Pose de carrelage pour sols et murs'
    },
    {
      libelle: 'R√©novation de salle de bain',
      description: 'R√©novation compl√®te de salle de bain'
    },
    {
      libelle: 'Construction de maison individuelle',
      description: 'Construction de maison neuve cl√© en main'
    },
    {
      libelle: 'Ravalement de fa√ßade',
      description: 'Nettoyage et ravalement de fa√ßade'
    },
    {
      libelle: 'Peinture int√©rieure et ext√©rieure',
      description: 'Travaux de peinture int√©rieure et ext√©rieure'
    },
    {
      libelle: 'Conception architecturale',
      description: 'Conception et dessin de plans architecturaux'
    },
    {
      libelle: '√âtude structurelle',
      description: '√âtude de la structure du b√¢timent'
    },
    {
      libelle: 'Mesure et bornage de terrain',
      description: 'Mesures pr√©cises et bornage de terrain'
    },
    {
      libelle: '√âtude g√©otechnique',
      description: '√âtude des sols pour construction'
    },
    {
      libelle: 'Conseil juridique en droit immobilier',
      description: 'Conseils juridiques sp√©cialis√©s en immobilier'
    },
    {
      libelle: 'Installation de climatisation',
      description: 'Installation de syst√®mes de climatisation'
    },
    {
      libelle: 'Entretien et maintenance chauffage',
      description: 'Entretien et maintenance des syst√®mes de chauffage'
    },
    {
      libelle: 'Menuiserie aluminium et bois',
      description: 'Fabrication et pose de menuiseries aluminium et bois'
    },
    {
      libelle: 'Installation de porte et fen√™tre',
      description: 'Pose de portes et fen√™tres'
    },
    {
      libelle: 'Travaux de toiture',
      description: 'R√©paration et entretien de toiture'
    },
    {
      libelle: 'Charpente bois et m√©tal',
      description: 'Construction et r√©paration de charpentes'
    },
    {
      libelle: 'D√©coration int√©rieure',
      description: 'Conseil et r√©alisation en d√©coration int√©rieure'
    },
    {
      libelle: 'Am√©nagement paysager',
      description: 'Cr√©ation et entretien d\'espaces verts'
    },
    {
      libelle: '√âtude d\'impact environnemental',
      description: '√âtude des impacts environnementaux des projets'
    },
    {
      libelle: 'Dessin technique et plans d\'ex√©cution',
      description: 'R√©alisation de plans techniques d√©taill√©s'
    },
    {
      libelle: 'Gestion de chantier',
      description: 'Coordination et gestion compl√®te de chantier'
    },
    {
      libelle: 'Installation de syst√®me de s√©curit√©',
      description: 'Installation de syst√®mes d\'alarme et de s√©curit√©'
    },
    {
      libelle: 'Pose de parquet et rev√™tement de sol',
      description: 'Pose de parquet et autres rev√™tements de sol'
    },
    {
      libelle: 'R√©novation compl√®te d\'appartement',
      description: 'R√©novation compl√®te d\'appartement'
    },
    {
      libelle: 'Assainissement et drainage',
      description: 'Travaux d\'assainissement et syst√®mes de drainage'
    },
    // Nouveaux services suppl√©mentaires
    {
      libelle: 'Isolation thermique et phonique',
      description: 'Installation de syst√®mes d\'isolation thermique et acoustique'
    },
    {
      libelle: 'D√©molition et d√©samiantage',
      description: 'Travaux de d√©molition et d√©samiantage s√©curis√©s'
    },
    {
      libelle: 'Installation de panneaux solaires',
      description: 'Pose et installation de syst√®mes photovolta√Øques'
    },
    {
      libelle: 'R√©novation de cuisine',
      description: 'R√©novation compl√®te de cuisine'
    },
    {
      libelle: 'Installation de chemin√©e et po√™le',
      description: 'Pose de chemin√©es et po√™les √† bois'
    },
    {
      libelle: 'Construction de piscine',
      description: 'Construction de piscines enterr√©es et hors-sol'
    },
    {
      libelle: '√âtanch√©it√© de terrasse et toiture',
      description: 'Travaux d\'√©tanch√©it√© pour terrasses et toitures'
    },
    {
      libelle: 'Installation de portail et cl√¥ture',
      description: 'Pose de portails et syst√®mes de cl√¥ture'
    },
    {
      libelle: 'Nettoyage apr√®s chantier',
      description: 'Nettoyage professionnel apr√®s travaux'
    },
    {
      libelle: 'Expertise immobili√®re',
      description: 'Expertise et √©valuation de biens immobiliers'
    }
  ]

  // Map : pour associer chaque service √† une cat√©gorie
  const serviceToCategory = {
    // Prestations int√©rieures
    'Installation √©lectrique compl√®te': 'Prestations int√©rieures',
    'R√©paration de panne √©lectrique': 'Prestations int√©rieures',
    'Mise aux normes √©lectriques': 'Prestations int√©rieures',
    'Installation plomberie': 'Prestations int√©rieures',
    'R√©paration de fuite d\'eau': 'Prestations int√©rieures',
    'Pose de carrelage': 'Prestations int√©rieures',
    'R√©novation de salle de bain': 'Prestations int√©rieures',
    'Peinture int√©rieure et ext√©rieure': 'Prestations int√©rieures',
    'Installation de climatisation': 'Prestations int√©rieures',
    'Entretien et maintenance chauffage': 'Prestations int√©rieures',
    'Menuiserie aluminium et bois': 'Prestations int√©rieures',
    'Installation de porte et fen√™tre': 'Prestations int√©rieures',
    'D√©coration int√©rieure': 'Prestations int√©rieures',
    'Pose de parquet et rev√™tement de sol': 'Prestations int√©rieures',
    'R√©novation compl√®te d\'appartement': 'Prestations int√©rieures',
    'Isolation thermique et phonique': 'Prestations int√©rieures',
    'R√©novation de cuisine': 'Prestations int√©rieures',
    'Installation de chemin√©e et po√™le': 'Prestations int√©rieures',
    'Nettoyage apr√®s chantier': 'Prestations int√©rieures',

    // Prestations ext√©rieures
    'Ravalement de fa√ßade': 'Prestations ext√©rieures',
    'Travaux de toiture': 'Prestations ext√©rieures',
    'Charpente bois et m√©tal': 'Prestations ext√©rieures',
    'Am√©nagement paysager': 'Prestations ext√©rieures',
    'Assainissement et drainage': 'Prestations ext√©rieures',
    'Mesure et bornage de terrain': 'Prestations ext√©rieures',
    'D√©molition et d√©samiantage': 'Prestations ext√©rieures',
    'Installation de panneaux solaires': 'Prestations ext√©rieures',
    'Construction de piscine': 'Prestations ext√©rieures',
    '√âtanch√©it√© de terrasse et toiture': 'Prestations ext√©rieures',
    'Installation de portail et cl√¥ture': 'Prestations ext√©rieures',

    // Constructions
    'Construction de maison individuelle': 'Constructions',
    'Conception architecturale': 'Constructions',
    '√âtude structurelle': 'Constructions',
    '√âtude g√©otechnique': 'Constructions',
    '√âtude d\'impact environnemental': 'Constructions',
    'Dessin technique et plans d\'ex√©cution': 'Constructions',
    'Gestion de chantier': 'Constructions',
    'Installation de syst√®me de s√©curit√©': 'Constructions',
    'Expertise immobili√®re': 'Constructions'
  }

  // Map : pour associer chaque service aux m√©tiers correspondants
  const serviceToMetiers = {
    'Installation √©lectrique compl√®te': ['√âlectricien'],
    'R√©paration de panne √©lectrique': ['√âlectricien'],
    'Mise aux normes √©lectriques': ['√âlectricien'],
    'Installation plomberie': ['Plombier'],
    'R√©paration de fuite d\'eau': ['Plombier'],
    'Pose de carrelage': ['Carreleur'],
    'R√©novation de salle de bain': ['Plombier', 'Carreleur'],
    'Construction de maison individuelle': ['Constructeur', 'Ma√ßon'],
    'Ravalement de fa√ßade': ['Ma√ßon', 'Peintre'],
    'Peinture int√©rieure et ext√©rieure': ['Peintre'],
    'Conception architecturale': ['Architecte'],
    '√âtude structurelle': ['Bureau d\'√©tude', 'Ing√©nieur civil'],
    'Mesure et bornage de terrain': ['G√©om√®tre'],
    '√âtude g√©otechnique': ['Bureau d\'√©tude', 'G√©om√®tre'],
    'Conseil juridique en droit immobilier': ['Avocat'],
    'Installation de climatisation': ['Technicien climatisation'],
    'Entretien et maintenance chauffage': ['Technicien climatisation', 'Plombier'],
    'Menuiserie aluminium et bois': ['Menuisier'],
    'Installation de porte et fen√™tre': ['Menuisier', 'Serrurier'],
    'Travaux de toiture': ['Couvreur'],
    'Charpente bois et m√©tal': ['Charpentier'],
    'D√©coration int√©rieure': ['D√©corateur d\'int√©rieur'],
    'Am√©nagement paysager': ['Paysagiste'],
    '√âtude d\'impact environnemental': ['Bureau d\'√©tude'],
    'Dessin technique et plans d\'ex√©cution': ['Architecte', 'Bureau d\'√©tude'],
    'Gestion de chantier': ['Constructeur', 'Architecte'],
    'Installation de syst√®me de s√©curit√©': ['√âlectricien', 'Serrurier'],
    'Pose de parquet et rev√™tement de sol': ['Menuisier', 'Carreleur'],
    'R√©novation compl√®te d\'appartement': ['Constructeur', 'Ma√ßon', 'Plombier', '√âlectricien'],
    'Assainissement et drainage': ['Plombier', 'Ma√ßon'],
    'Isolation thermique et phonique': ['Pl√¢trier', 'Menuisier'],
    'D√©molition et d√©samiantage': ['Constructeur', 'Ma√ßon'],
    'Installation de panneaux solaires': ['√âlectricien'],
    'R√©novation de cuisine': ['Menuisier', 'Carreleur', 'Plombier', '√âlectricien'],
    'Installation de chemin√©e et po√™le': ['Ma√ßon', 'Plombier'],
    'Construction de piscine': ['Ma√ßon', 'Constructeur'],
    '√âtanch√©it√© de terrasse et toiture': ['Couvreur', 'Ma√ßon'],
    'Installation de portail et cl√¥ture': ['Serrurier', 'Menuisier'],
    'Nettoyage apr√®s chantier': [], // Service sans m√©tier sp√©cifique
    'Expertise immobili√®re': ['Avocat', 'Architecte']
  }

  let createdServices = 0
  let updatedServices = 0

  for (const serviceData of servicesData) {
    const { libelle, description } = serviceData
    
    // get target category id if mapped
    const catName = serviceToCategory[libelle]
    const category = catName ? categoriesMap[catName] : null

    // check if service exists already (by libelle)
    let existingService = await prisma.service.findFirst({ 
      where: { libelle },
      include: { metiers: true }
    })

    if (existingService) {
      // update categoryId if needed
      const newCategoryId = category ? category.id : null
      if (existingService.categoryId !== newCategoryId) {
        await prisma.service.update({
          where: { id: existingService.id },
          data: {
            categoryId: newCategoryId,
            description: description || existingService.description
          },
        })
        updatedServices++
        console.log(`‚ôªÔ∏è  Service mis √† jour : ${libelle} -> ${catName ?? 'sans cat√©gorie'}`)
      } else {
        console.log(`üîÅ Service existe d√©j√† (sans changement) : ${libelle}`)
      }
    } else {
      // create new service with categoryId (nullable)
      existingService = await prisma.service.create({
        data: {
          libelle,
          description: description || '',
          images: [],
          categoryId: category ? category.id : null,
        },
      })
      createdServices++
      console.log(`‚ûï Service cr√©√© : ${libelle} -> ${catName ?? 'sans cat√©gorie'}`)
    }

    // Associer les m√©tiers au service
    const metiersForService = serviceToMetiers[libelle] || []
    
    // Supprimer les associations existantes pour ce service
    await prisma.metierService.deleteMany({
      where: { serviceId: existingService.id }
    })

    // Cr√©er les nouvelles associations
    for (const metierName of metiersForService) {
      const metier = metiersMap[metierName]
      if (metier) {
        await prisma.metierService.create({
          data: {
            metierId: metier.id,
            serviceId: existingService.id
          }
        })
        console.log(`   üîó Association cr√©√©e : ${libelle} -> ${metierName}`)
      }
    }

    if (metiersForService.length === 0) {
      console.log(`   ‚ÑπÔ∏è  Aucun m√©tier associ√© pour : ${libelle}`)
    }
  }

  console.log(`‚úÖ Services: cr√©√©s=${createdServices} ; mis √† jour=${updatedServices}`)

  // =======================
  // V√âRIFICATION DES ASSOCIATIONS
  // =======================
  console.log('\nüîç V√©rification des associations...')
  
  const servicesWithMetiers = await prisma.service.findMany({
    include: {
      metiers: {
        include: {
          metier: true
        }
      },
      category: true
    }
  })

  for (const service of servicesWithMetiers) {
    const metiersList = service.metiers.map(m => m.metier.libelle).join(', ')
    console.log(`üìã ${service.libelle} (${service.category?.name || 'sans cat√©gorie'}) -> M√©tiers: ${metiersList || 'aucun'}`)
  }

  console.log('üåø Seeding termin√© avec succ√®s !')
}

main()
  .catch((e) => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })